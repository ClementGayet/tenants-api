networks:
  net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

services:

  # Postgres database
  database:
    restart: "no"
    image: postgres:16-alpine
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "8765:5432"
    networks:
      - net

  backend:
    restart: "no"
    user: root
    build:
      context: ../..
      args:
        - NODE_ENV=development
    command: npm run start:dev
    environment:
      - NODE_ENV=development
    env_file:
      - .env
    volumes:
      - ../../node_modules:/app/node_modules:ro
      - ../../package.json:/app/package.json:ro
      - ../../src:/app/src:ro
    ports:
      - "3000:3000"
    networks:
      - net
    depends_on:
      database:
        condition: service_healthy
